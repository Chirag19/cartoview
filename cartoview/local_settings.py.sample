# -*- coding: utf-8 -*-
#########################################################################
#
# Copyright (C) 2016 OSGeo
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
#########################################################################

import os
from .settings import (MAP_BASELAYERS, INSTALLED_APPS, OGC_SERVER, TEMPLATES,
                       CARTOVIEW_TEMPLATE_DIRS, APPS_DIR)
SITEURL = "http://localhost/"
ALLOWED_HOSTS = ['*']
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'cartoview',
        'USER': 'xxxx',
        'PASSWORD': 'xxxxx',
        'HOST': 'localhost',
        'PORT': '5432',
    },
    # vector datastore for uploads
    'datastore': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        # 'ENGINE': '', # Empty ENGINE name disables
        'NAME': 'cartoview_datastore',
        'USER': 'xxxxxx',
        'PASSWORD': 'xxxxx',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
GEOSERVER_LOCATION = os.getenv('GEOSERVER_LOCATION',
                               'http://localhost:8080/geoserver/')

GEOSERVER_PUBLIC_LOCATION = os.getenv(
    #    'GEOSERVER_PUBLIC_LOCATION', '{}/geoserver/'.format(SITEURL)
    'GEOSERVER_LOCATION',
    'http://localhost/geoserver/')

# OGC_SERVER_DEFAULT_USER = os.getenv('GEOSERVER_ADMIN_USER', 'admin')

# OGC_SERVER_DEFAULT_PASSWORD = os.getenv('GEOSERVER_ADMIN_PASSWORD',
#                                         'geoserver')
# OGC_SERVER = {
#     'default': {
#         'BACKEND':
#         'geonode.geoserver',
#         'LOCATION':
#         GEOSERVER_LOCATION,
#         'LOGIN_ENDPOINT':
#         'j_spring_oauth2_geonode_login',
#         'LOGOUT_ENDPOINT':
#         'j_spring_oauth2_geonode_logout',
#         # PUBLIC_LOCATION needs to be kept like this because in dev mode
#         # the proxy won't work and the integration tests will fail
#         # the entire block has to be overridden in the local_settings
#         'PUBLIC_LOCATION':
#         GEOSERVER_PUBLIC_LOCATION,
#         'USER':
#         OGC_SERVER_DEFAULT_USER,
#         'PASSWORD':
#         OGC_SERVER_DEFAULT_PASSWORD,
#         'MAPFISH_PRINT_ENABLED':
#         True,
#         'PRINT_NG_ENABLED':
#         True,
#         'GEONODE_SECURITY_ENABLED':
#         True,
#         'GEOFENCE_SECURITY_ENABLED':
#         GEOFENCE_SECURITY_ENABLED,
#         'GEOGIG_ENABLED':
#         False,
#         'WMST_ENABLED':
#         False,
#         'BACKEND_WRITE_ENABLED':
#         True,
#         'WPS_ENABLED':
#         False,
#         'LOG_FILE':
#         '%s/geoserver/data/logs/geoserver.log' % os.path.abspath(
#             os.path.join(PROJECT_ROOT, os.pardir)),
#         # Set to name of database in DATABASES dictionary to enable
#         'DATASTORE':
#         os.getenv('DEFAULT_BACKEND_DATASTORE', 'datastore'),
#         'PG_GEOGIG':
#         False,
#         'TIMEOUT':
#         10  # number of seconds to allow for HTTP requests
#     }
# }

# GeoNode javascript client configuration

# default map projection
# Note: If set to EPSG:4326, then only EPSG:4326 basemaps will work.
DEFAULT_MAP_CRS = "EPSG:900913"

# Where should newly created maps be focused?
DEFAULT_MAP_CENTER = (0, 0)

# How tightly zoomed should newly created maps be?
# 0 = entire world;
# maximum zoom is between 12 and 15 (for Google Maps, coverage varies by area)
DEFAULT_MAP_ZOOM = 0
TEMPLATES[0]["DIRS"] = CARTOVIEW_TEMPLATE_DIRS + TEMPLATES[0]["DIRS"]
from cartoview import app_manager
from past.builtins import execfile
app_manager_settings = os.path.join(
    os.path.dirname(app_manager.__file__), "settings.py")
execfile(os.path.realpath(app_manager_settings))
load_apps(APPS_DIR)
INSTALLED_APPS += CARTOVIEW_APPS
for settings_file in APPS_SETTINGS:
    try:
        execfile(settings_file)
    except Exception as e:
        print(e.message)