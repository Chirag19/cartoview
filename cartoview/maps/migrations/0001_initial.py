# Generated by Django 2.1.3 on 2019-03-19 03:19

import cartoview.layers.validators
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('layers', '0002_remove_layer_services'),
    ]

    operations = [
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('bounding_box', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True), size=4)),
                ('projection', models.CharField(default='EPSG:3857', max_length=30, validators=[cartoview.layers.validators.validate_projection])),
                ('center', django.contrib.postgres.fields.ArrayField(base_field=models.DecimalField(blank=True, decimal_places=15, max_digits=30, null=True), size=2)),
                ('constrain_rotation', models.BooleanField(default=True)),
                ('enableRotation', models.BooleanField(default=True)),
                ('max_zoom', models.IntegerField(default=28, validators=[django.core.validators.MaxValueValidator(28), django.core.validators.MinValueValidator(0)])),
                ('minZoom', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(28), django.core.validators.MinValueValidator(0)])),
                ('zoomFactor', models.IntegerField(default=2, validators=[django.core.validators.MaxValueValidator(28), django.core.validators.MinValueValidator(1)])),
                ('zoom', models.IntegerField(default=6, validators=[django.core.validators.MaxValueValidator(28), django.core.validators.MinValueValidator(1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('render_options', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('layers', models.ManyToManyField(to='layers.Layer')),
            ],
            options={
                'ordering': ('title', '-created_at', '-updated_at'),
            },
        ),
    ]
