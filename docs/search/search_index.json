{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CartoView Cartoview extends the popular GeoNode SDI to provide the ability to create, share, and visualize GIS Web Mapping Applications very easily and very quickly from the browser without programming. Cartoview enables communities of users to share geospatial applications, to collaborate on these applications, and to exchange the underlying data as Open Geospatial Consortium (OGC) compliant web services. Cartoview has been built utilizing open source software and open standards to make it available for all GIS operators and to maximize interoperability.","title":"About"},{"location":"#cartoview","text":"Cartoview extends the popular GeoNode SDI to provide the ability to create, share, and visualize GIS Web Mapping Applications very easily and very quickly from the browser without programming. Cartoview enables communities of users to share geospatial applications, to collaborate on these applications, and to exchange the underlying data as Open Geospatial Consortium (OGC) compliant web services. Cartoview has been built utilizing open source software and open standards to make it available for all GIS operators and to maximize interoperability.","title":"CartoView"},{"location":"QA/","text":"CartoView Frequently Asked Questions What exactly is CartoView? Is it a replacement for GeoNode? CartoView is Geo App market for GeoNode. It is not a fork / improvement / reprlacement of Geonode, but rather additional code aimed to make it more extensible to integrate third party apps directly from the browser. What are the goals of CartoView? Sharing GIS Apps Provide apps for common tasks like visualizing and querying feature services. Extend the functions of the GeoNode SDI beyond data management Provide a solid core of utilities that can be used to help developers integrate and deploy their Geo apps Foster an ecosystem of apps extending easily deplyable and installable Can I use CartoView with GeoNode Version 2.4 and earlier? CartoView starts working with GeoNode 2.5 I have an idea! What should I do? Please file an issue. Issues are a great way to discuss new ideas, build consensus and talk about implementation details. I built something with cartoview can I show you? Absolutely! Share it on twitter with @ahmednosman , @cartoview . You can add your project to the list in the readme too. I built a reusable app can I contribute it? Ofcourse. This is the purpose of Cartoview. Read the instructions on developing and deploying apps. Create an account on cartoview.org and load your app. Your app will be immediately available to all Cartoview deployments What are some good CartoView Apps? Simple Map Viewer : This app allows the creation of html mobile ready viewer app with most basic features. Feature Detailed Viewer : A map and list applications for store locations or similar usage WebApp Builder : A customizable GIS Running CartoView on GeoNode and QGIS Server? There is no reason for Cartoview not to work on this deployment. (This was never tested). Apps relying on GeoServer ofcourse will not work","title":"Frequently Asked Questions"},{"location":"QA/#cartoview","text":"","title":"CartoView"},{"location":"QA/#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"contrib/","text":"Cartoview Contributing to CartoView Please refer to each project's style Guidelines and Guidelines for submitting patches and additions. In general, we follow the \"fork-and-pull\" Git workflow. Fork the Repo on GitHub Clone the project to your own machine Commit changes to your own branch Push your work back up to your fork Submit a Pull request so that we can review your changes Note Be sure to merge the latest from \"upstream\" before making a pull request!","title":"Contribute"},{"location":"contrib/#cartoview","text":"","title":"Cartoview"},{"location":"contrib/#contributing-to-cartoview","text":"Please refer to each project's style Guidelines and Guidelines for submitting patches and additions. In general, we follow the \"fork-and-pull\" Git workflow. Fork the Repo on GitHub Clone the project to your own machine Commit changes to your own branch Push your work back up to your fork Submit a Pull request so that we can review your changes Note Be sure to merge the latest from \"upstream\" before making a pull request!","title":"Contributing to CartoView"},{"location":"demo/","text":"Cartoview Demos You can try cartoview from Here . Create your account, Load some test data and Start authoring Web Mapping Applicaitons.","title":"Demos"},{"location":"demo/#cartoview","text":"","title":"Cartoview"},{"location":"demo/#demos","text":"You can try cartoview from Here . Create your account, Load some test data and Start authoring Web Mapping Applicaitons.","title":"Demos"},{"location":"developers/","text":"Cartoview For Developers CartoView Provides GeoApp Market for GIS Developers. Develope your own App Create a new empty App from CartoView App template as follow in your cartoview project directory cd apps django - admin . py startapp -- template = https : // github . com / cartologic / cartoview - app - template / archive / master . zip your_App_name Edit cartoview_project/apps/apps.yml and add entry for your app or create apps.yml file ,If ou cannot find it ,Add the following lines: - name: app_name active: true order: 0 Add stores using the following command inside CartoView project directory python manage.py loaddata app_stores.json Add the new App to the database form Django admin interface Don't forget to check Single instance option if u want to test it for the first time Now on CartoView Apps tab your app will Appear like this Click Explore Button to open App home page Success Congratulations, now you have created your first App on CartoView you can upload it to cartoview App market to make use of the features provided by cartoview App market","title":"Developers"},{"location":"developers/#cartoview","text":"","title":"Cartoview"},{"location":"developers/#for-developers","text":"CartoView Provides GeoApp Market for GIS Developers. Develope your own App Create a new empty App from CartoView App template as follow in your cartoview project directory cd apps django - admin . py startapp -- template = https : // github . com / cartologic / cartoview - app - template / archive / master . zip your_App_name Edit cartoview_project/apps/apps.yml and add entry for your app or create apps.yml file ,If ou cannot find it ,Add the following lines: - name: app_name active: true order: 0 Add stores using the following command inside CartoView project directory python manage.py loaddata app_stores.json Add the new App to the database form Django admin interface Don't forget to check Single instance option if u want to test it for the first time Now on CartoView Apps tab your app will Appear like this Click Explore Button to open App home page Success Congratulations, now you have created your first App on CartoView you can upload it to cartoview App market to make use of the features provided by cartoview App market","title":"For Developers"},{"location":"installation_docker/","text":"Cartoview Docker Installation Requirements Install Python2.7 Make Sure to add Python to the Path, as this is not done by default Add python.exe to the PATH Install Django 1.8.7 , Open Command Prompt then type: pip install django == 1 .8.7 Docker Users You need to install docker-compose For Windows Users install make by Installing MSYS2 Open MSYS2 shell and Install make using this command pacman -S make Add msys_path \\usr\\bin to PATH envirnment variable Use Docker Quickstart Terminal to execute the following commands Create Cartoview Project which contains required files to run and configure Docker using this command: django - admin . py startproject -- template = https : // github . com / cartologic / cartoview - project - template / archive / master . zip -- name django . env , uwsgi . ini , . bowerrc , server . py your_project_name Replace your_project_name with the desired name Go to your project Folder cd your_project_name Open docker-compose.yml and Look at port numbers for GeoServer and PostGIS and change the number before the : this will be the port on your machine Tips Any file with .env EXTENSION is a file that contains Environment Variables passed to specific container for example django.env file contains Environment Variables passed to CartoView container so Django can read these variables and use them Default database username: cartologic and password: root Default database username is in postgis.env file in your project if you want to change it. If you want to run this project with a domain : From django.env (this is a file that contain common django setting variables) file in your Project Folder: DATABASE_URL = postgres : // database_user_name : database_password @postgis : 5432 / cartoview GEOSERVER_PUBLIC_LOCATION = http : // your_domain_or_ip / geoserver / GEOSERVER_LOCATION = http : // geoserver : 8080 / geoserver / SITEURL = http : // your_domain_or_ip ALLOWED_HOSTS = [ * ] For windows users the default IP aasigned to Docker is : 192.168.99.100 so the default django.env file must be something like this: DATABASE_URL = postgres : // database_user_name : database_password @postgis : 5432 / cartoview GEOSERVER_PUBLIC_LOCATION = http : // 192.168 . 99.100 / geoserver / GEOSERVER_LOCATION = http : // geoserver : 8080 / geoserver / SITEURL = http : // 192.168 . 99.100 ALLOWED_HOSTS = [ * ] Warning For windows Users Please Comment volumes lines of postgis Container only in docker-compose.yml by preceding the line with # something like this: # volumes: # - pgdata:/var/lib/postgresql if django-admin.py not working try django-admin Start Docker Images(CartoView,GeoServer,Postgres) type : make run Success Now you can Access cartoview on http://localhost or http:// your_domain_or_ip Important Final step Configure GeoServer before uploading layers from Here Deployment notes Important Once CartoView is installed it is expected to install all the Apps from the app store automatically CartoView will not be able to restart Docker when new apps install. After you install any new app or any app update you will need to restart docker manually until this issue is addressed in the future Follow these steps to get Apps working on nginx Collect static files using this commands in your project folder make collect_static Restart server now with the following command you should restart server after installing any App docker-compose restart cartoview Windows Issues Docker volumes have some issues with windows so you have to backup your postgres database. Docker on Linux You will Find all postgres data in pgdata folder.","title":"Installation - docker"},{"location":"installation_docker/#cartoview","text":"","title":"Cartoview"},{"location":"installation_docker/#docker","text":"","title":"Docker"},{"location":"installation_docker/#installation-requirements","text":"Install Python2.7 Make Sure to add Python to the Path, as this is not done by default Add python.exe to the PATH Install Django 1.8.7 , Open Command Prompt then type: pip install django == 1 .8.7 Docker Users You need to install docker-compose For Windows Users install make by Installing MSYS2 Open MSYS2 shell and Install make using this command pacman -S make Add msys_path \\usr\\bin to PATH envirnment variable Use Docker Quickstart Terminal to execute the following commands Create Cartoview Project which contains required files to run and configure Docker using this command: django - admin . py startproject -- template = https : // github . com / cartologic / cartoview - project - template / archive / master . zip -- name django . env , uwsgi . ini , . bowerrc , server . py your_project_name Replace your_project_name with the desired name Go to your project Folder cd your_project_name Open docker-compose.yml and Look at port numbers for GeoServer and PostGIS and change the number before the : this will be the port on your machine Tips Any file with .env EXTENSION is a file that contains Environment Variables passed to specific container for example django.env file contains Environment Variables passed to CartoView container so Django can read these variables and use them Default database username: cartologic and password: root Default database username is in postgis.env file in your project if you want to change it. If you want to run this project with a domain : From django.env (this is a file that contain common django setting variables) file in your Project Folder: DATABASE_URL = postgres : // database_user_name : database_password @postgis : 5432 / cartoview GEOSERVER_PUBLIC_LOCATION = http : // your_domain_or_ip / geoserver / GEOSERVER_LOCATION = http : // geoserver : 8080 / geoserver / SITEURL = http : // your_domain_or_ip ALLOWED_HOSTS = [ * ] For windows users the default IP aasigned to Docker is : 192.168.99.100 so the default django.env file must be something like this: DATABASE_URL = postgres : // database_user_name : database_password @postgis : 5432 / cartoview GEOSERVER_PUBLIC_LOCATION = http : // 192.168 . 99.100 / geoserver / GEOSERVER_LOCATION = http : // geoserver : 8080 / geoserver / SITEURL = http : // 192.168 . 99.100 ALLOWED_HOSTS = [ * ] Warning For windows Users Please Comment volumes lines of postgis Container only in docker-compose.yml by preceding the line with # something like this: # volumes: # - pgdata:/var/lib/postgresql if django-admin.py not working try django-admin Start Docker Images(CartoView,GeoServer,Postgres) type : make run Success Now you can Access cartoview on http://localhost or http:// your_domain_or_ip Important Final step Configure GeoServer before uploading layers from Here","title":"Installation Requirements"},{"location":"installation_docker/#deployment-notes","text":"Important Once CartoView is installed it is expected to install all the Apps from the app store automatically CartoView will not be able to restart Docker when new apps install. After you install any new app or any app update you will need to restart docker manually until this issue is addressed in the future Follow these steps to get Apps working on nginx Collect static files using this commands in your project folder make collect_static Restart server now with the following command you should restart server after installing any App docker-compose restart cartoview","title":"Deployment notes"},{"location":"installation_docker/#windows-issues","text":"Docker volumes have some issues with windows so you have to backup your postgres database.","title":"Windows Issues"},{"location":"installation_docker/#docker-on-linux","text":"You will Find all postgres data in pgdata folder.","title":"Docker on Linux"},{"location":"installation_ubuntu/","text":"CartoView This document describes the Installation of CartoView on Ubuntu with GeoNode 2.6.3 Warning In case of any other version of GeoNode before 2.5 these steps will not be applicable. Installation Requirements Install Python2.7 . Install Django sudo apt-get update sudo apt-get install python-django Note For more information about Djano installation visit 1.8.7 = Django 1.9a0 . Install Required Packages on ubuntu linux Run the following command sudo apt-get update sudo apt-get install python-virtualenv python-dev libxml2 libxml2-dev libxslt1-dev zlib1g-dev libjpeg-dev libpq-dev libgdal-dev git default-jdk Database Installation Install PostgreSQL Database sudo apt-get install postgresql postgresql-contrib Install PostGIS ( Extension to support Geographic objects that allows location queries to be run in SQL. ) sudo apt-get install postgis Note you can install pgAdmin ( PostgreSQL GUI tool using ): sudo apt-get install pgadmin3 Note For more Information about PostgreSQL visit postgresql . Database Configuration You will need to log in with a user called postgres created by the installation to manage the database sudo -i -u postgres Change the postgres user password psql \\password Exit the PostgreSQL prompt by typing \\q Create two new databases cartoView and cartoview_datastore createdb cartoview createdb cartoview_datastore Note You can change the databases' name but make sure to change thier names in the local_settings.py file in cartoview project directory Add PostGIS extension to the created databases psql database-name CREATE EXTENSION postgis; Note For more information about PostgreSQL configuration visit postgreSQL Install GeoServer Install Java 8 (needed by GeoServer) sudo apt-add-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java8-installer 1) Download Tomcat v9 2) Extract the tar folder and rename it tomcat 3) Download GeoServer war file from here 4) Rename the war file to geoserver.war 5) Copy the war file inside webapps directory in tomcat 6) Create tomcat user by editing the tomcat-users.xml file: sudo nano path/to/tomcat/conf/tomcat-users.xml Note Make sure to change path/to/tomcat in the previous command with your tomcat path 7) Paste the following line in tomcat-users.xml user username=\"admin\" password=\"password\"roles=\"manager-gui,admin-gui\"/ just before /tomcat-users and change the username and password 8) Edit context files in host-manager directory sudo nano path/to/tomcat/webapps/host-manager/META-INF/context.xml 9) Comment the line Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / by changing it to !-- Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / -- 10) Edit context files in manager directory sudo nano path/to/tomcat/webapps/manager/META-INF/context.xml 11) Comment the line Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / by changing it to !-- Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / -- Start tomcat server sh path/to/your/tomcat/bin/startup.sh Note For more information about tomcat Installation and Configuration of tomcat visit tomcat Important Cartview must be up and running Important In Production Configure GeoServer before uploading layers from here GeoNode 2.6.3 Installation Follow these setps if you don't have Geonode installed on your ubuntu system. Create and activate the python virtual environment virtualenv lt;your_virtual_env_name gt; source lt;your_virtual_env_name gt;/bin/activate Install pip ( a package management system used install and manage software packages written in Python ) sudo apt-get install python-pip Install geonode 2.6.3 pip install geonode==2.6.3 sudo apt-get install python-gdal Create a symbolic link of OSGeo in your virtualenv needed by GDAL to run properly ln -s /usr/lib/python2.7/dist-packages/osgeo lt;your_virtual_env_name gt;/lib/python2.7/site-packages/osgeo Note To Verify installation add any layer in [Geonode][1] CartoView Libraries Installation Install CartoView pip install cartoview Install CartoView_Django Project django-admin.py startproject template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc,server.py lt;your_project_name gt; Go to your Project Folder cd lt;your_project_name gt; Detect changes in app_manager App python manage.py makemigrations app_manager Create account Table python manage.py migrate account Create Rest of tables : python manage.py migrate Load default User python manage.py loaddata sample_admin.json Load default oauth app python manage.py loaddata json/default_oauth_apps.json Test Development Server by running this Command : python manage.py runserver 0.0.0.0:8000 Info (Optional) if you want to override any variable settings (for example to change the database password ,name or hostname ) rename local_settings.py.sample to local_settings.py then override settings you want inside local_settings.py Warning Don't Forget to Change your_project_name to desired name. Apps From GeoApp Market To Install apps from GeoApp Market Load Default Store python manage.py loaddata app_stores.json Install nodejs and then install bower we need them to install app_manager dependencies In this step we will install required files in your project folder type : bower install Collect Required files type: ``` python manage.py collectstatic --noinput - Now you Can Install Apps from [Geo App Market][2] - Go to apps tab and click manage apps``` Button and install app you want Deployment Notes Important In Production Configure GeoServer before uploading layers from here Important Once CartoView is installed it is expected to install all apps from the App Store automatically At the moment CartoView will fully support Apache server only For nginx deployments, CartoView will be able to detect new apps and get the updates, how ever to apply the updates, web server restart will be required to complete the process CartoView will not be able to restart nginx when new apps are installed. After you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future Follow these steps to get apps working on nginx Collect static files using this commands python manage.py collectstatic --noinput Restart server now you should restart server after installing any app","title":"Installation - ubuntu"},{"location":"installation_ubuntu/#cartoview","text":"","title":"CartoView"},{"location":"installation_ubuntu/#this-document-describes-the-installation-of-cartoview-on-ubuntu-with-geonode-263","text":"Warning In case of any other version of GeoNode before 2.5 these steps will not be applicable.","title":"This document describes the Installation of CartoView on Ubuntu with GeoNode 2.6.3"},{"location":"installation_ubuntu/#installation-requirements","text":"Install Python2.7 . Install Django sudo apt-get update sudo apt-get install python-django Note For more information about Djano installation visit 1.8.7 = Django 1.9a0 .","title":"Installation Requirements"},{"location":"installation_ubuntu/#install-required-packages-on-ubuntu-linux","text":"Run the following command sudo apt-get update sudo apt-get install python-virtualenv python-dev libxml2 libxml2-dev libxslt1-dev zlib1g-dev libjpeg-dev libpq-dev libgdal-dev git default-jdk","title":"Install Required Packages on ubuntu linux"},{"location":"installation_ubuntu/#database-installation","text":"Install PostgreSQL Database sudo apt-get install postgresql postgresql-contrib Install PostGIS ( Extension to support Geographic objects that allows location queries to be run in SQL. ) sudo apt-get install postgis Note you can install pgAdmin ( PostgreSQL GUI tool using ): sudo apt-get install pgadmin3 Note For more Information about PostgreSQL visit postgresql .","title":"Database Installation"},{"location":"installation_ubuntu/#database-configuration","text":"You will need to log in with a user called postgres created by the installation to manage the database sudo -i -u postgres Change the postgres user password psql \\password Exit the PostgreSQL prompt by typing \\q Create two new databases cartoView and cartoview_datastore createdb cartoview createdb cartoview_datastore Note You can change the databases' name but make sure to change thier names in the local_settings.py file in cartoview project directory Add PostGIS extension to the created databases psql database-name CREATE EXTENSION postgis; Note For more information about PostgreSQL configuration visit postgreSQL","title":"Database Configuration"},{"location":"installation_ubuntu/#install-geoserver","text":"Install Java 8 (needed by GeoServer) sudo apt-add-repository ppa:webupd8team/java sudo apt-get update sudo apt-get install oracle-java8-installer 1) Download Tomcat v9 2) Extract the tar folder and rename it tomcat 3) Download GeoServer war file from here 4) Rename the war file to geoserver.war 5) Copy the war file inside webapps directory in tomcat 6) Create tomcat user by editing the tomcat-users.xml file: sudo nano path/to/tomcat/conf/tomcat-users.xml Note Make sure to change path/to/tomcat in the previous command with your tomcat path 7) Paste the following line in tomcat-users.xml user username=\"admin\" password=\"password\"roles=\"manager-gui,admin-gui\"/ just before /tomcat-users and change the username and password 8) Edit context files in host-manager directory sudo nano path/to/tomcat/webapps/host-manager/META-INF/context.xml 9) Comment the line Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / by changing it to !-- Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / -- 10) Edit context files in manager directory sudo nano path/to/tomcat/webapps/manager/META-INF/context.xml 11) Comment the line Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / by changing it to !-- Valve className=\"org.apache.catalina.valves.RemoteAddrValve\" allow=\"127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1\" / -- Start tomcat server sh path/to/your/tomcat/bin/startup.sh Note For more information about tomcat Installation and Configuration of tomcat visit tomcat Important Cartview must be up and running Important In Production Configure GeoServer before uploading layers from here","title":"Install GeoServer"},{"location":"installation_ubuntu/#geonode-263-installation","text":"Follow these setps if you don't have Geonode installed on your ubuntu system. Create and activate the python virtual environment virtualenv lt;your_virtual_env_name gt; source lt;your_virtual_env_name gt;/bin/activate Install pip ( a package management system used install and manage software packages written in Python ) sudo apt-get install python-pip Install geonode 2.6.3 pip install geonode==2.6.3 sudo apt-get install python-gdal Create a symbolic link of OSGeo in your virtualenv needed by GDAL to run properly ln -s /usr/lib/python2.7/dist-packages/osgeo lt;your_virtual_env_name gt;/lib/python2.7/site-packages/osgeo Note To Verify installation add any layer in [Geonode][1]","title":"GeoNode 2.6.3 Installation"},{"location":"installation_ubuntu/#cartoview-libraries-installation","text":"Install CartoView pip install cartoview Install CartoView_Django Project django-admin.py startproject template=https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc,server.py lt;your_project_name gt; Go to your Project Folder cd lt;your_project_name gt; Detect changes in app_manager App python manage.py makemigrations app_manager Create account Table python manage.py migrate account Create Rest of tables : python manage.py migrate Load default User python manage.py loaddata sample_admin.json Load default oauth app python manage.py loaddata json/default_oauth_apps.json Test Development Server by running this Command : python manage.py runserver 0.0.0.0:8000 Info (Optional) if you want to override any variable settings (for example to change the database password ,name or hostname ) rename local_settings.py.sample to local_settings.py then override settings you want inside local_settings.py Warning Don't Forget to Change your_project_name to desired name. Apps From GeoApp Market To Install apps from GeoApp Market Load Default Store python manage.py loaddata app_stores.json Install nodejs and then install bower we need them to install app_manager dependencies In this step we will install required files in your project folder type : bower install Collect Required files type: ``` python manage.py collectstatic --noinput - Now you Can Install Apps from [Geo App Market][2] - Go to apps tab and click manage apps``` Button and install app you want","title":"CartoView Libraries Installation"},{"location":"installation_ubuntu/#deployment-notes","text":"Important In Production Configure GeoServer before uploading layers from here Important Once CartoView is installed it is expected to install all apps from the App Store automatically At the moment CartoView will fully support Apache server only For nginx deployments, CartoView will be able to detect new apps and get the updates, how ever to apply the updates, web server restart will be required to complete the process CartoView will not be able to restart nginx when new apps are installed. After you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future Follow these steps to get apps working on nginx Collect static files using this commands python manage.py collectstatic --noinput Restart server now you should restart server after installing any app","title":"Deployment Notes"},{"location":"installation_vagrant/","text":"CartoView Installation with Vagrant will be available soon.","title":"Installation - vagrant"},{"location":"installation_windows/","text":"Cartoview This document describes the Installation of CartoView with GeoNode on Windows 2.6.3 Warning In case of any other version of GeoNode before 2.5 these steps will not be applicable. Installation Requirements Install Python2.7 Make Sure to add Python to the Path, as this is not done by default Add python.exe to the PATH Install Django 1.8.7 , Open Command Prompt then type: pip install django == 1 .8.7 Existing GeoNode Users Check GeoNode and CartoView version compatibility in PYPI Then install CartoView Requirements: GeoNode == 2.6.3 Install CartoView Libraries pip install cartoview == version Create CartoView Project django-admin.py startproject --template = https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc your_project_name Go to your Project Folder cd your_project_name Detect Changes in app_manager python manage.py makemigrations app_manager Create account table python manage.py migrate account Create rest of database tables python manage.py migrate Collect static Files python manage.py collectstatic --noinput Now Development Server : python manage.py runserver 0 .0.0.0:8000 Deployment Notes Important In Production Configure GeoServer before uploading layers from Here Notes Once CartoView is installed it is expected to install all apps from the App store automatically At the moment CartoView will fully support Apache server only For nginx deployments, CartoView will be able to detect new apps and get the updates, How ever to apply the updates, web server restart will be required to complete the process. CartoView will not be able to restart nginx when new apps are installed. After you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future Follow these steps to get apps working on nginx Collect static files using this commands python manage.py collectstatic --noinput Restart server now you should restart server after installing any app","title":"Installation - windows"},{"location":"installation_windows/#cartoview","text":"","title":"Cartoview"},{"location":"installation_windows/#this-document-describes-the-installation-of-cartoview-with-geonode-on-windows-263","text":"Warning In case of any other version of GeoNode before 2.5 these steps will not be applicable.","title":"This document describes the Installation of CartoView with GeoNode on Windows 2.6.3"},{"location":"installation_windows/#installation-requirements","text":"Install Python2.7 Make Sure to add Python to the Path, as this is not done by default Add python.exe to the PATH Install Django 1.8.7 , Open Command Prompt then type: pip install django == 1 .8.7","title":"Installation Requirements"},{"location":"installation_windows/#existing-geonode-users","text":"Check GeoNode and CartoView version compatibility in PYPI Then install CartoView","title":"Existing GeoNode Users"},{"location":"installation_windows/#requirements","text":"GeoNode == 2.6.3 Install CartoView Libraries pip install cartoview == version Create CartoView Project django-admin.py startproject --template = https://github.com/cartologic/cartoview-project-template/archive/master.zip --name django.env,uwsgi.ini,.bowerrc your_project_name Go to your Project Folder cd your_project_name Detect Changes in app_manager python manage.py makemigrations app_manager Create account table python manage.py migrate account Create rest of database tables python manage.py migrate Collect static Files python manage.py collectstatic --noinput Now Development Server : python manage.py runserver 0 .0.0.0:8000","title":"Requirements:"},{"location":"installation_windows/#deployment-notes","text":"Important In Production Configure GeoServer before uploading layers from Here Notes Once CartoView is installed it is expected to install all apps from the App store automatically At the moment CartoView will fully support Apache server only For nginx deployments, CartoView will be able to detect new apps and get the updates, How ever to apply the updates, web server restart will be required to complete the process. CartoView will not be able to restart nginx when new apps are installed. After you install or update apps from the app manager page you will need to restart nginx manually until this issue is addressed in the future Follow these steps to get apps working on nginx Collect static files using this commands python manage.py collectstatic --noinput Restart server now you should restart server after installing any app","title":"Deployment Notes"},{"location":"issues/","text":"Cartoview Issues If something isn't working the way you expected, please take a look at previous issues that resolve common problems first. Have you found a new bug? Want to request a new feature? We'd love to hear from you. Please let us know by submitting an issue.","title":"Issues"},{"location":"issues/#cartoview","text":"","title":"Cartoview"},{"location":"issues/#issues","text":"If something isn't working the way you expected, please take a look at previous issues that resolve common problems first. Have you found a new bug? Want to request a new feature? We'd love to hear from you. Please let us know by submitting an issue.","title":"Issues"},{"location":"key_features/","text":"Cartoview Key Features GeoApp Market for GIS Web Applications, Once you install GeoNode and CartoView you will be be able to install GIS applications directly from the browser. Configure and Publish web mapping applications directly from the browser. CartoView levereages the data management and security infrastructures of GeoNode to deploy and serve GIS applications. Developers create applications and deploy them on the GeoApp Market Once the app is deployed it becomes available to all Cartoview deployments.","title":"Key Features"},{"location":"key_features/#cartoview","text":"","title":"Cartoview"},{"location":"key_features/#key-features","text":"GeoApp Market for GIS Web Applications, Once you install GeoNode and CartoView you will be be able to install GIS applications directly from the browser. Configure and Publish web mapping applications directly from the browser. CartoView levereages the data management and security infrastructures of GeoNode to deploy and serve GIS applications. Developers create applications and deploy them on the GeoApp Market Once the app is deployed it becomes available to all Cartoview deployments.","title":"Key Features"},{"location":"market/","text":"Note These steps works only if CartoView up and running to Install apps from GeoApp Market Follow these steps Go to apps tab and click manage apps Button and install app you want Warning Restart sever after installing any Apps","title":"Install App"},{"location":"upload_to_app_market/","text":"Upload App to Cartoview GeoApp Market After creating your app as mentioned in create app section , you can upload your app to Carotview App Market to be shared with CartoView community ,To make the best use of features provided by CartoView. Do the following shown steps to upload your app to CartoView App market 1) To upload your App visit cartoview App Market 2) Login with your Google account, Twitter or Github 3) After login you will need to fill your info to submit apps 4) Now you can submit Apps 5) fill the application information Note You need to upload app package as zipped folder 6) After submitting your app it will need approval, after approval the status will change to approved 7) After approval you will find your app on Cartoview App Market","title":"Upload App to App Market"},{"location":"upload_to_app_market/#upload-app-to-cartoview-geoapp-market","text":"After creating your app as mentioned in create app section , you can upload your app to Carotview App Market to be shared with CartoView community ,To make the best use of features provided by CartoView. Do the following shown steps to upload your app to CartoView App market 1) To upload your App visit cartoview App Market 2) Login with your Google account, Twitter or Github 3) After login you will need to fill your info to submit apps 4) Now you can submit Apps 5) fill the application information Note You need to upload app package as zipped folder 6) After submitting your app it will need approval, after approval the status will change to approved 7) After approval you will find your app on Cartoview App Market","title":"Upload App to Cartoview GeoApp Market"}]}